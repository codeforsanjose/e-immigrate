---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: {{ .Release.Name }}
  annotations:
    secrets.doppler.com/reload: 'true'
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: web
  replicas: {{ .Values.web.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: web
    spec:
      {{- if .Values.serviceaccount.create }}
      serviceAccountName: {{ .Release.Name }}
      {{- end }}
      containers:
      - image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
        name: web
        command:
          {{- range .Values.web.command }}
          - {{ . }}
          {{- end }}
        resources:
          limits:
            cpu: {{ .Values.web.cpu.limit }}
            memory: {{ .Values.web.memory.limit }}
          requests:
            cpu: {{ .Values.web.cpu.requests }}
            memory: {{ .Values.web.memory.requests }}
        ports:
        - containerPort: {{ .Values.web.port }}
        envFrom:
        - secretRef:
            name: {{ .Values.global.doppler_secret_ref }}
      nodeSelector:
        kubernetes.io/arch: amd64
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-web-vpa
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: web
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: web
        minAllowed:
          cpu: {{ .Values.web.cpu.requests }}
          memory: {{ .Values.web.memory.requests }}
        maxAllowed:
          cpu: {{ .Values.web.cpu.limit }}
          memory: {{ .Values.web.memory.limit }}
        controlledResources: ["cpu", "memory"]
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: web
spec:
  ports:
    - port: 80
      targetPort: {{ .Values.web.port }}
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Name }}
spec:
  ingressClassName: nginx
  rules:
    - host: {{ index .Values.global "deployed_url" }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Release.Name }}
              port:
                number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-redirect
  namespace: {{ .Release.Name }}
  annotations:
    nginx.ingress.kubernetes.io/permanent-redirect: https://{{ index .Values.global "deployed_url" }}$request_uri
spec:
  ingressClassName: nginx
  rules:
    - host: www.{{ index .Values.global "deployed_url" }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Release.Name }}
              port:
                number: 80
