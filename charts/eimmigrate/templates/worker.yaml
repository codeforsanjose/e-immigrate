{{- if .Values.worker.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: {{ .Release.Name }}
  annotations:
    secrets.doppler.com/reload: 'true'
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
  replicas: {{ .Values.worker.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker
    spec:
      {{- if .Values.serviceaccount.create }}
      serviceAccountName: {{ .Release.Name }}
      {{- end }}
      containers:
      - image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
        name: worker
        command:
          {{- range .Values.worker.command }}
          - {{ . }}
          {{- end }}
        resources:
          limits:
            cpu: {{ .Values.worker.cpu.limit }}
            memory: {{ .Values.worker.memory.limit }}
          requests:
            cpu: {{ .Values.worker.cpu.requests }}
            memory: {{ .Values.worker.memory.requests }}
        envFrom:
        - secretRef:
            name: {{ .Values.global.doppler_secret_ref }}
      nodeSelector:
        kubernetes.io/arch: amd64
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-worker-vpa
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: worker
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
      - containerName: worker
        minAllowed:
          cpu: {{ .Values.worker.cpu.requests }}
          memory: {{ .Values.worker.memory.requests }}
        maxAllowed:
          cpu: {{ .Values.web.cpu.limit }}
          memory: {{ .Values.web.memory.limit }}
        controlledResources: ["cpu", "memory"]
{{- end }}
